<?xml version="1.0" encoding="UTF-8"?><record_update table="sp_widget">
    <sp_widget action="INSERT_OR_UPDATE">
        <category>custom</category>
        <client_script><![CDATA[function($rootScope,$scope,spUtil) {
	/* widget controller */
	var c = this;
	c.notePos = 0;
	
	c.selectItem = function(idx) {
		c.notePos = idx;
		var id = c.data.notes[idx].sys_id;
		console.log('idx: ' + idx);
		console.log('c.notePos ' + c.notePos);
		console.log('Note ID: ' + id);
		$rootScope.noteID = id;
		$rootScope.$emit('selectNote', id);
	};

	$rootScope.$on('renderNote', function(event,data){
		console.log('updateTitle listener started...');
		console.log("c.notePos " + JSON.stringify(c.data.notes[c.notePos]));
		console.log('c.data.notes : ' + JSON.stringify(c.data.notes));
		c.data.notes[c.notePos].title = data.title;
    c.data.notes[c.notePos].note = data.note;
	});
	
	c.newNote = function() {
		c.server.get({
			action: 'newNote'
		}).then(function(r) {
			c.data.notes.unshift(r.data.newNote);
			c.data.noteID = r.data.noteID;
			$rootScope.noteID = c.data.noteID;
			$rootScope.$emit('selectNote', c.data.noteID);
		});
	}
	
	$rootScope.$on('deleteNote', function(event,data){
		c.data.notes.splice(c.notePos, 1);
	});
	
	// Record removed from data object on the client and passed to server
	c.snNoteUpdate = function(name,sysID){

		for (var i=0;i<c.data.notes.length;i++){
			if(c.data.notes[i].sys_id == name.data.sys_id){
				if(name.data.record.note){
					c.data.notes[i].note = name.data.record.note.display_value;
				}
				if(name.data.record.title){
					c.data.notes[i].title = name.data.record.title.display_value;
				}
				c.server.update();

			}
		}
	}
	
	c.snNoteDelete = function(sysID) {
		c.server.get({
			action: snDeleteNote,
			noteID: sysID
		}).then(function(r){
			c.data.notes = r.data.notes;
		});
	}
	
	spUtil.recordWatch($scope,'x_snc_createnotes_note', 'numberANYTHING', function(name){
		console.log(c.data.operation);
		console.log(name);
		
		if(data.name.operation == 'update'){
			c.snNoteUpdate(name,name.data.sys_id);
		}
		
		if(data.name.operation == 'delete'){
			c.snNoteDelete(name.data.sys_id);
		}
		
		if(data.name.operation == 'insert'){
			c.server.refresh();
		}
		
	});
	
	
	
	
}]]></client_script>
        <controller_as>c</controller_as>
        <css/>
        <data_table>sp_instance</data_table>
        <demo_data/>
        <description/>
        <docs/>
        <field_list/>
        <has_preview>true</has_preview>
        <id>notes_list</id>
        <internal>false</internal>
        <link><![CDATA[function link(scope, element, attrs, controller) {  }]]></link>
        <name>Notes List</name>
        <option_schema/>
        <public>false</public>
        <roles/>
        <script><![CDATA[(function() {
	//create an array to populate with notes
	data.notes = [];
	var noteGR = new GlideRecord('x_snc_createnotes_note');
	noteGR.addQuery('user', gs.getUser().getID());
	noteGR.orderByDesc('sys_created_on');
	noteGR.query();
	while (noteGR.next()) {
		var noteObj = {};
		//use service portal helper method to get some display values
		$sp.getRecordDisplayValues(noteObj, noteGR, 'number,title,sys_id');
		//get the first 20 characters of the description
		noteObj.note = noteGR.getValue('note').slice(0,20);
		//push the populated obj into the array
		data.notes.push(noteObj);
	}
	
	if(input) {
		
		if(input.action == 'newNote') {
			var newNote = new GlideRecord('x_snc_createnotes_note');
					newNote.newRecord();
			var id = newNote.insert();
					data.noteID = id;
					data.newNote = {};
			$sp.getRecordValues(data.newNote, newNote, 'title,note,sys_id');					
		}
		
		if(input.action == 'snDeleteNote') {
			var delNote = new GlideRecord('x_snc_createnotes_note');
			if(delNote.get(input.noteID)){
				delNote.deleteRecord();
			}
		}
		
	}

})();
]]></script>
        <servicenow>false</servicenow>
        <sys_class_name>sp_widget</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2022-06-07 05:00:06</sys_created_on>
        <sys_id>8a4ae17f2f7341105e66d2172799b645</sys_id>
        <sys_mod_count>131</sys_mod_count>
        <sys_name>Notes List</sys_name>
        <sys_package display_value="CreateNotes" source="x_snc_createnotes">df5fd9a5090232007f44e1046c8ff69f</sys_package>
        <sys_policy/>
        <sys_scope display_value="CreateNotes">df5fd9a5090232007f44e1046c8ff69f</sys_scope>
        <sys_update_name>sp_widget_8a4ae17f2f7341105e66d2172799b645</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2022-06-23 15:57:03</sys_updated_on>
        <template><![CDATA[<div class="panel panel-default">
  <div class="panel-heading clearfix">
    <h3 class="panel-title pull-left">
      ${Notes}
    </h3>
    <button class="btn btn-default pull-right" ng-click="c.newNote()"> 
        <span class="glyphicon glyphicon-plus"></span> 
    </button>
  </div>
  
  <div class="panel-body"> 
      <input placeholder="Filter" class="form-control" ng-model="noteFilter" /> 
  </div>
  
  <div class="list-group">
    <a class="list-group-item" ng-click= "c.selectItem($index)" ng-repeat="note in data.notes | filter: noteFilter">
      <h4 class="list-group-item-heading" id="note-title">
        {{note.title}}
      </h4>
      <p class="list-group-item-text" id="note-body">
        {{note.note}}
      </p>
      <p class="list-group-item-text">
        {{note.number}}
      </p>
    </a>
  </div>
</div>]]></template>
    </sp_widget>
</record_update>
